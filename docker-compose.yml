name: Async-API

services:

  elastic-movie:
    image: elasticsearch:8.6.2
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - "9200:9200"
    healthcheck:
       test: curl -s http://elastic-movie:9200 >/dev/null || exit 1
       interval: 5s
       timeout: 5s
       retries: 10
    restart: always
    networks:
      - auth_network

  elasticdump-movie:
    # Этот контейнер дождётся готовности elastic,
    # загрузит в него данные из файла в директории elasticdump,
    # после чего выключится.
    build: elasticdump
    volumes:
      - ./elasticdump:/elasticdump
    depends_on:
      elastic-movie:
        condition: service_healthy
    networks:
      - auth_network

  redis-movie:
    image: redis:7.4.1
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - auth_network

  fastapi-movie:
    build:
      context: .
      target: final
    image: fastapi
    healthcheck:
      test: curl -s http://fastapi-movie:8000/api/openapi >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      elastic-movie:
        condition: service_healthy
      redis-movie:
        condition: service_healthy
    networks:
      - auth_network

  nginx-movie:
    image: nginx:1.27.2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      fastapi-movie:
        condition: service_healthy
    restart: always
    networks:
      - auth_network


volumes:
   elasticdata:
     driver: local
     driver_opts:
       type: none
       device: ./elasticdata
       o: bind

networks:
  auth_network:
    external: true